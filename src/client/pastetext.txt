#account.html
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–ß–∏—Ç–∞—Ç–µ–ª—å—Å–∫–∏–π –¥–Ω–µ–≤–Ω–∏–∫</title>
  <link rel="stylesheet" href="../static/css/style.css" />
  <script src="https://telegram.org/js/telegram-web-app.js?58"></script>
</head>
<body>
  <!-- –®–∞–ø–∫–∞ -->
  <header class="navbar">
    <div class="navbar-top">
      <div class="logo">üìö –ß–∏—Ç–∞—Ç–µ–ª—å—Å–∫–∏–π –¥–Ω–µ–≤–Ω–∏–∫</div>
      <h1 id="username" class="username">–ó–∞–≥—Ä—É–∑–∫–∞...</h1>
    </div>
    <button id="logoutBtn">–í—ã–π—Ç–∏</button>
  </header>

  <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ -->
    <main class="book-list" id="bookList">
    <!-- –ó–¥–µ—Å—å –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–Ω–∏–≥ -->
    </main>

  <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ -->
    <div id="modal" class="modal">
    <div class="modal-content">

        <!-- –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è -->
        <span onclick="closeModal()" class="close">&times;</span>

        <!-- –û–±–ª–æ–∂–∫–∞ –∫–Ω–∏–≥–∏ -->
        <img id="modal-image" class="modal-book-image" src="" alt="–û–±–ª–æ–∂–∫–∞ –∫–Ω–∏–≥–∏" />

        <!-- –ù–∞–∑–≤–∞–Ω–∏–µ -->
        <h2 id="modal-title"></h2>

        <!-- –ê–≤—Ç–æ—Ä -->
        <p><strong>–ê–≤—Ç–æ—Ä:</strong> <span id="modal-author"></span></p>

        <!-- –°–µ—Ä–∞—è –ø–æ–ª–æ—Å–∫–∞ -->
        <div class="divider"></div>

        <!-- –û–ø–∏—Å–∞–Ω–∏–µ -->
        <p id="modal-description"></p>

        <!-- –°–µ—Ä–∞—è –ø–æ–ª–æ—Å–∫–∞ -->
        <div class="divider"></div>

        <!-- –†–µ–π—Ç–∏–Ω–≥ -->
        <div id="modal-rating" class="rating"></div>

        <!-- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è -->
        <div class="modal-actions">
            <button id="editBookBtn">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
            <button id="deleteBookBtn">–£–¥–∞–ª–∏—Ç—å</button>
        </div>

    </div>
    </div>


  <script src="../static/js/account.js"></script>
</body>
</html>

#add_book.html
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É</title>
  <link rel="stylesheet" href="../static/css/style.css" />
  <script src="https://telegram.org/js/telegram-web-app.js?58"></script>
</head>
<body>
  <header class="navbar">
    <div class="logo">üìö –ß–∏—Ç–∞—Ç–µ–ª—å—Å–∫–∏–π –¥–Ω–µ–≤–Ω–∏–∫</div>
  </header>

  <main class="form-container">
    <h2>–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É</h2>

    <label for="bookImage" class="upload-label">
      –î–æ–±–∞–≤–∏—Ç—å –æ–±–ª–æ–∂–∫—É
      <input type="file" id="bookImage" accept="image/*" />
    </label>
    <img id="preview" class="preview-image" src="" alt="–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä"/>

    <textarea id="title" rows="1" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏:"></textarea>
    <textarea id="author" rows="1" placeholder="–ê–≤—Ç–æ—Ä:"></textarea>
    <textarea id="description" rows="4" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏..."></textarea>

    <div class="rating-input">
      <span data-value="1">‚òÖ</span>
      <span data-value="2">‚òÖ</span>
      <span data-value="3">‚òÖ</span>
      <span data-value="4">‚òÖ</span>
      <span data-value="5">‚òÖ</span>
    </div>

    <button class="submit-btn" onclick="saveBook()">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
  </main>

  <script src="../static/js/add_book.js"></script>
</body>
</html>

#edit_book.html
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏</title>
  <link rel="stylesheet" href="../static/css/style.css" />
  <script src="https://telegram.org/js/telegram-web-app.js?58"></script>
</head>
<body>
  <!-- –®–∞–ø–∫–∞ -->
  <header class="navbar">
    <div class="logo">üìö –ß–∏—Ç–∞—Ç–µ–ª—å—Å–∫–∏–π –¥–Ω–µ–≤–Ω–∏–∫</div>
  </header>

  <!-- –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è -->
  <main class="book-edit-form">
    <form id="editBookForm">
      <!-- –û–±–ª–æ–∂–∫–∞ –∫–Ω–∏–≥–∏ -->
      <img id="previewImage" src="" alt="–û–±–ª–æ–∂–∫–∞ –∫–Ω–∏–≥–∏" class="book-image" />

      <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ -->
      <input type="file" id="bookImage" accept="image/*" />

      <!-- –ù–∞–∑–≤–∞–Ω–∏–µ -->
      <textarea type="text" id="title" rows=1 placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏:" required></textarea>

      <!-- –ê–≤—Ç–æ—Ä -->
      <textarea type="text" id="author" rows=1 placeholder="–ê–≤—Ç–æ—Ä –∫–Ω–∏–≥–∏" required></textarea>

      <!-- –û–ø–∏—Å–∞–Ω–∏–µ -->
      <textarea id="description" rows=4 placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏"></textarea>

      <!-- –†–µ–π—Ç–∏–Ω–≥ -->
      <div class="rating-input">
        <span data-value="1">‚òÖ</span>
        <span data-value="2">‚òÖ</span>
        <span data-value="3">‚òÖ</span>
        <span data-value="4">‚òÖ</span>
        <span data-value="5">‚òÖ</span>
      </div>

      <!-- –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è -->
      <button class="submit-btn" type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</button>
    </form>
  </main>

  <script src="../static/js/edit_book.js"></script>
</body>
</html>

#account.js
document.addEventListener("DOMContentLoaded", () => {
  const token = localStorage.getItem("token");
  const usernameElement = document.getElementById("username");
  const logoutBtn = document.getElementById("logoutBtn");

  if (!token) {
    alert("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã");
    window.location.href = "/client/templates/login.html";
    return;
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—Ö–æ–¥–∞
  function logout() {
    localStorage.removeItem("token");
    window.location.href = "/client/templates/index.html"; // –∏–ª–∏ login.html
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ "–í—ã–π—Ç–∏"
  logoutBtn.addEventListener("click", logout);

  // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±—ç–∫–µ–Ω–¥–∞
  fetch("http://127.0.0.1:8000/me", {
    method: "GET",
    headers: {
      "Authorization": "Bearer " + token
    }
  })
  .then(res => {
    if (res.status === 401) {
      throw new Error("–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞");
    }
    return res.json();
  })
  .then(userData => {
    usernameElement.textContent = userData.username;
  })
  .catch(err => {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:", err);
    alert("–û—à–∏–±–∫–∞: " + err.message);
    logout(); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ
  });

  // –ö–æ–¥ –¥–ª—è –∫–Ω–∏–≥
  fetch("http://127.0.0.1:8000/books/me", {
    method: "GET",
    headers: {
      "Authorization": "Bearer " + token,
    }
  })
  .then(res => {
    if (res.status === 401) {
      alert("–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞");
      localStorage.removeItem("token");
      window.location.href = "/client/templates/login.html";
      return;
    }
    return res.json();
  })
  .then(books => {
    console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", books);
    const container = document.getElementById("bookList");

    container.innerHTML = "";


    books.forEach(book => {
      const card = document.createElement("div");
      card.className = "book-card";
      
      const img = document.createElement("img");
      img.src = `http://127.0.0.1:8000/books/cover/${book.id}`;
      img.alt = "–û–±–ª–æ–∂–∫–∞ –∫–Ω–∏–≥–∏";
      img.className = "book-image";

      const title = document.createElement("h3")
      title.className = "book-title";
      title.textContent = book.title;

      const author = document.createElement("p");
      author.className = "book-author";
      author.textContent = book.author;

      // –ü—Ä–∏ –∫–ª–∏–∫–µ –≤—ã–∑—ã–≤–∞–µ–º openBookDetails
      card.addEventListener("click", () =>
        openBookDetails(
          book.id,
          book.title,
          book.author,
          book.description,
          "‚≠ê".repeat(book.rating)
        )
      );

      // –°–æ–±–∏—Ä–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
      card.appendChild(img);
      card.appendChild(title);
      card.appendChild(author);

      // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      container.appendChild(card);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Å –ø–ª—é—Å–∏–∫–æ–º –≤ –∫–æ–Ω–µ—Ü
    const addCard = document.createElement("div");
    addCard.className = "add-card";
    addCard.textContent = "+";
    addCard.onclick = () => {
      window.location.href = "/client/templates/add_book.html";
    };
    container.appendChild(addCard);
  })
  .catch(err => console.error("–û—à–∏–±–∫–∞:", err));
});

let currentBookId = null;
// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–Ω–∏–≥–µ
function openBookDetails(id, title, author, description, rating) {
  currentBookId = id;

  const modalImage = document.getElementById('modal-image');
  modalImage.src = `http://127.0.0.1:8000/books/cover/${id}`;

  document.getElementById('modal-title').textContent = title;
  document.getElementById('modal-author').textContent = author;
  document.getElementById('modal-description').textContent = description;
  document.getElementById('modal-rating').innerHTML = rating;

  document.getElementById('modal').style.display = 'block';
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal() {
  document.getElementById('modal').style.display = 'none';
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏ –æ–∫–Ω–∞
window.onclick = function(event) {
  const modal = document.getElementById('modal');
  if (event.target === modal) {
    modal.style.display = 'none';
  }
}

// –ö–Ω–æ–ø–∫–∞ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
document.getElementById("editBookBtn").onclick = () => {
  if (currentBookId) {
    window.location.href = `/client/templates/edit_book.html?book_id=${currentBookId}`;
  }
};

// –ö–Ω–æ–ø–∫–∞ "–£–¥–∞–ª–∏—Ç—å"
document.getElementById("deleteBookBtn").onclick = () => {
  if (!currentBookId) return;

  const confirmDelete = confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–Ω–∏–≥—É?");
  if (confirmDelete) {
    fetch(`http://127.0.0.1:8000/books/${currentBookId}`, {
      method: "DELETE",
      headers: {
        "Authorization": "Bearer " + localStorage.getItem("token")
      }
    })
    .then(res => {
      if (res.ok) {
        location.reload(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
      } else {
        alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏");
      }
    })
    .catch(err => {
      console.error("–û—à–∏–±–∫–∞:", err);
      alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞");
    });
  }
};

#add_book.js
// –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
document.getElementById('bookImage')?.addEventListener('change', function(event) {
  const file = event.target.files[0];
  if (file) {
    const reader = new FileReader();
    reader.onload = function(e) {
      document.getElementById('preview').src = e.target.result;
    };
    reader.readAsDataURL(file);
  }
});


document.addEventListener("DOMContentLoaded", function () {
  let selectedRating = 0;

  const stars = document.querySelectorAll('.rating-input span');

  stars.forEach(star => {
    star.addEventListener('click', () => {
      // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∑–≤—ë–∑–¥–æ—á–∫–∏
      selectedRating = parseInt(star.getAttribute('data-value'));

      // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö
      stars.forEach(s => s.classList.remove('active'));

      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –¥–æ —Ç–µ–∫—É—â–µ–π
      stars.forEach((s, index) => {
        if (index < selectedRating) {
          s.classList.add('active');
        }
      });

      console.log("–í—ã–±—Ä–∞–Ω —Ä–µ–π—Ç–∏–Ω–≥:", selectedRating);
    });
  });

  window.saveBook = function () {
    const title = document.getElementById('title').value;
    const author = document.getElementById('author').value;
    const description = document.getElementById('description').value;
    const imageInput = document.getElementById('bookImage');
    const image = imageInput.files[0];

    if (!title || !author || !description || !image || selectedRating === 0) {
      alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥");
      return;
    }

    const formData = new FormData();
    formData.append("title", title);
    formData.append("author", author);
    formData.append("description", description);
    formData.append("rating", selectedRating);
    formData.append("image", image);

    fetch("http://127.0.0.1:8000/books", {
      method: "POST",
      headers: {
        "Authorization": "Bearer " + localStorage.getItem("token")
      },
      body: formData
    })
    .then(res => res.json())
    .then(data => {
      window.location.href = "/client/templates/account.html";
    })
    .catch(err => {
      console.error("–û—à–∏–±–∫–∞:", err);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏");
    });
  };
});

#edit_book.js
document.addEventListener("DOMContentLoaded", () => {
  const urlParams = new URLSearchParams(window.location.search);
  const bookId = urlParams.get('book_id');

  if (!bookId) {
    alert("–ù–µ —É–∫–∞–∑–∞–Ω ID –∫–Ω–∏–≥–∏");
    window.location.href = "/client/templates/account.html";
    return;
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥–∏
  fetch(`http://127.0.0.1:8000/book/${bookId}`, {
    method: "GET",
    headers: {
      "Authorization": "Bearer " + localStorage.getItem("token")
    }
  })
  .then(res => {
    if (res.status === 401) {
      throw new Error("–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞");
    }
    return res.json();
  })
  .then(bookData => {
    // –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π
    document.getElementById("title").value = bookData.title;
    document.getElementById("author").value = bookData.author;
    document.getElementById("description").value = bookData.description;

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–ª–æ–∂–∫–∏
    document.getElementById("previewImage").src = `http://127.0.0.1:8000/books/cover/${bookId}`;

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
    const stars = document.querySelectorAll('.rating-input span');
    stars.forEach(star => {
      star.addEventListener('click', () => {
        const value = parseInt(star.getAttribute('data-value'));
        stars.forEach(s => s.classList.toggle('active', s.getAttribute('data-value') <= value));
      });
    });

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
    const ratingStars = document.querySelectorAll('.rating-input span');
    ratingStars.forEach(star => {
      star.classList.remove('active');
    });
    for (let i = 0; i < Math.floor(bookData.rating); i++) {
      ratingStars[i].classList.add('active');
    }
  })
  .catch(err => {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥–∏:", err);
    alert("–û—à–∏–±–∫–∞: " + err.message);
    window.location.href = "/client/templates/account.html";
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
  document.getElementById("editBookForm").addEventListener("submit", function (event) {
    event.preventDefault();

    const title = document.getElementById("title").value;
    const author = document.getElementById("author").value;
    const description = document.getElementById("description").value;
    const imageInput = document.getElementById("bookImage");
    const selectedRating = Array.from(document.querySelectorAll('.rating-input span.active')).length;

    const formData = new FormData();
    formData.append("title", title);
    formData.append("author", author);
    formData.append("description", description);
    formData.append("rating", selectedRating);

    if (imageInput.files.length > 0) {
      formData.append("image", imageInput.files[0]);
    }

    fetch(`http://127.0.0.1:8000/books/${bookId}`, {
      method: "PUT",
      headers: {
        "Authorization": "Bearer " + localStorage.getItem("token")
      },
      body: formData
    })
    .then(res => {
      if (!res.ok) {
        throw new Error("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");
      }
      return res.json();
    })
    .then(data => {
      window.location.href = "/client/templates/account.html";
    })
    .catch(err => {
      console.error("–û—à–∏–±–∫–∞:", err);
      alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏");
    });
  });
});

#style.css
@font-face {
  font-family: "Giest";
  src: url("./assets/Giest.ttf");
}

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: 'Segoe UI', sans-serif;
  background-color: #f7f7f7;
}

.navbar {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: end;
  padding: 1rem 2rem;
  background-color: #2c3e50;
  color: white;
}

.navbar-top {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 100%;
}

.logo {
  font-size: 1.5rem;
  margin-bottom: 0.5rem;
}

.username {
  font-size: 2rem;
  color: #ecf0f1;
  margin: 0;
  font-weight: bolder;
}

#logoutBtn {
  
  padding: 0.6rem 1.2rem;
  background-color: #e74c3c;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1rem;
}

#logoutBtn:hover {
  background-color: #c0392b;
}

.btn-auth {
  padding: 0.5rem 1rem;
  background-color: #3498db;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 0.9rem;
}

.book-list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: 1.5rem;
  padding: 1rem;
}

@media (max-width: 600px) {
  .book-list {
    grid-template-columns: 1fr;
  }
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–Ω–∏–≥–∏ */
.book-card {
  background-color: white;
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
  padding: 1rem;
  text-align: center;
  cursor: pointer;
  transition: transform 0.2s ease;
}

.book-card:hover {
  transform: scale(1.03);
}


.book-image {
  width: 100%;
  height: auto;
  max-height: 220px;
  object-fit: cover;
  border-radius: 5px;
}

.book-title {
  margin: 0.5rem 0 0.2rem;
  font-size: 1.1rem;
  font-weight: bold;
}

.book-author {
  font-size: 0.9rem;
  color: #777;
  margin-bottom: 1rem;
}

/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */
.modal {
  display: none; /* –°–∫—Ä—ã—Ç–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é */
  position: fixed;
  z-index: 999;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0,0,0,0.5);
}

.modal-content {
  background-color: white;
  margin: 5% auto;
  padding: 2rem;
  border: 1px solid #888;
  width: 90%;
  max-width: 400px;
  border-radius: 10px;
  position: relative;
}

.modal-book-image {
  width: 100%;
  height: auto;
  max-height: 300px;
  object-fit: cover;
  border-radius: 10px;
  margin-bottom: 1rem;
}

.modal-actions {
  margin-top: 1.5rem;
  display: flex;
  justify-content: space-between;
}

.modal-actions button {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-weight: bold;
}

#editBookBtn {
  border: 1px solid #2c3e50;
  background-color: #86a0b9;
  color: black;
}

#editBookBtn:hover {
  transition: 0.2s;
  background-color: #193552;
  color: white;
}

#deleteBookBtn {
  border: 1px solid #e74c3c;
  background-color: rgb(255, 234, 234);
  color: black;
}

#deleteBookBtn:hover {
  transition: 0.2s;
  background-color: #c0392b;
  color: white;
}

.divider {
  width: 100%;
  height: 1px;
  background-color: #ccc;
  margin: 1rem 0;
}

.close {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 24px;
  cursor: pointer;
  color: #aaa;
}

.close:hover {
  color: black;
}

.rating {
  font-size: 1.5rem;
  user-select: none;
}

.add-card {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 3rem;
  color: #aaa;
  background-color: #fff;
  border: 2px dashed #ccc;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.3s ease;

}

.add-card:hover {
  border-color: #3498db;
  color: #3498db;
}

.book-edit-form {
  max-width: 500px;
  margin: 2rem auto;
  background-color: white;
  padding: 2rem;
  border-radius: 10px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.upload-label {
  display: inline-block;
  padding: 0.5rem 1rem;
  background-color: #ecf0f1;
  border-radius: 5px;
  cursor: pointer;
  margin-bottom: 1rem;
}

.upload-label input {
  display: none;
}

.preview-image {
  display: block;
  margin: 1rem auto;
  max-width: 100%;
  max-height: 200px;
  border-radius: 5px;
}

textarea {
  width: 100%;
  padding: 0.7rem;
  margin-top: 1rem;
  border-radius: 5px;
  border: 1px solid #ccc;
  resize: vertical;
}

.rating-input {
  margin-top: 1rem;
  font-size: 2rem;
  user-select: none;
}

.rating-input span {
  cursor: pointer;
  color: #ddd;
}

.rating-input span.active {
  color: gold;
}

.submit-btn {
  margin-top: 1rem;
  padding: 0.7rem 1.5rem;
  background-color: #2ecc71;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.auth-container {
  max-width: 400px;
  margin: 2rem auto;
  padding: 2rem;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.auth-container h2 {
  text-align: center;
  margin-bottom: 2rem;
}

#loginForm input,
#registerForm input {
  width: 100%;
  padding: 0.7rem;
  margin-top: 1rem;
  border-radius: 5px;
  border: 1px solid #ccc;
}

.submit-btn {
  margin-top: 1rem;
  padding: 0.7rem 1.5rem;
  background-color: #3498db;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  width: 100%;
}

.switch-mode {
  text-align: center;
  margin-top: 1rem;
  cursor: pointer;
  color: #3498db;
}

.form-container {
  max-width: 500px;
  margin: 2rem auto;
  background-color: white;
  padding: 2rem;
  border-radius: 10px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

#previewImage {
  width: 100%;
  height: auto;
  max-height: 200px;
  object-fit: cover;
  border-radius: 5px;
  margin-bottom: 1rem;
}